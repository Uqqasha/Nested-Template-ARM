{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  
    "parameters": {
        "adminUsername": {
        "type": "string",
        "defaultValue": "Uqqasha98",
        "metadata": {
            "description": "Username for the Virtual Machine."
        }
    },
    "adminPassword": {
        "type": "securestring",
        "defaultValue": "(wNK>M8769wu9Mk[",
        "metadata": {
            "description": "Password for the Virtual Machine."
        }
    },
    "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "uqqasha12345",
        "metadata": {
            "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
    },
    "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "allowedValues": [
            "2008-R2-SP1",
            "2012-Datacenter",
            "2012-R2-Datacenter",
            "2016-Nano-Server",
            "2016-Datacenter-with-Containers",
            "2016-Datacenter",
            "2019-Datacenter"
        ],
        "metadata": {
            "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
        }
    },
    "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
            "description": "Size of the virtual machine."
        }
    },

    "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
            "description": "Location for all resources."
        }
    },

    "virtualNetworkName": {
        "type": "string",
        "defaultValue": "VNet",
        "metadata": {
            "description": "Name of the VNet"
        }
    },

    "subnet1Name": {
        "type": "string",
        "defaultValue": "DMZ",
        "metadata": {
            "description": "Name of the subnet inside VNet in which VM is to be deployed."
        }
    },
    "subnet2Name": {
        "type": "string",
        "defaultValue": "Private",
        "metadata": {
            "description": "Name of the subnet inside VNet in which VM is to be deployed."
        }
    },
    "subnet3Name": {
        "type": "string",
        "defaultValue": "Data",
        "metadata": {
            "description": "Name of the subnet inside VNet in which VM is to be deployed."
        }
    },

    "vmCount": {
        "type": "int",
        "defaultValue": 2
    },

    "publicOrPrivate": {
        "type": "array",
        "defaultValue": [
            "Public",
            "Private",
            "Private"
        ],
        "metadata": {
            "description": "Determines whether to create public or private VM."
        }
    }

    },
    
    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'storage')]",
        "nicName": "vm-nic-00",
        "publicIPAddressName": "public-vm-pip",
        "vmName": "vm-",
        "publicIp1": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
        },
        "subnetRef1": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnet1Name'))]",
        "subnetRef2": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnet2Name'))]",
        "subnetRef3": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnet3Name'))]"
    },

    "resources": [
    
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('storageAccountName'),copyIndex(1))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {},
      "copy": {
          "name": "storageAccountCopy",
          "count": "[parameters('vmCount')]"
      }
    },
    
    {
      "condition": "[equals(parameters('publicOrPrivate')[copyIndex()], 'Public')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsLabelPrefix'),copyIndex(1))]"
        }
      },
      "copy": {
          "name": "publicIpCopy",
          "count": "[parameters('vmCount')]"
      }
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('nicName'),copyIndex(1))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "publicIpCopy",
        "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPAddressName'),copyIndex()))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfig',copyIndex(1))]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables(concat('subnetRef',copyIndex(1)))]"
              },
              "publicIPAddress": {
                "id": "[if(equals(parameters('publicOrPrivate')[copyIndex()], 'Public'), concat(string(variables('publicIp1')),copyIndex()), json('null'))]"
              }
            }
          }
        ]
      },
      "copy": {
          "name": "nicCopy",
          "count": "[parameters('vmCount')]"
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "copy": {
          "name": "vmCopy",
          "count": "[parameters('vmCount')]"
      },
      "name": "[concat(variables('vmName'),copyIndex(1))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountName'),copyIndex(1)))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('nicName'),copyIndex(1)))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'),copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex(1)))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', concat(variables('storageAccountName'),copyIndex(1)))).primaryEndpoints.blob]"
          }
        }
      }
    }
    ]
}